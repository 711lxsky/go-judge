// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.11.4
// source: judge.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Result_ResponseType_StatusType int32

const (
	Result_ResponseType_Invalid             Result_ResponseType_StatusType = 0
	Result_ResponseType_Accepted            Result_ResponseType_StatusType = 1
	Result_ResponseType_WrongAnswer         Result_ResponseType_StatusType = 2 // Not used
	Result_ResponseType_PartiallyCorrect    Result_ResponseType_StatusType = 3 // Not used
	Result_ResponseType_MemoryLimitExceeded Result_ResponseType_StatusType = 4
	Result_ResponseType_TimeLimitExceeded   Result_ResponseType_StatusType = 5
	Result_ResponseType_OutputLimitExceeded Result_ResponseType_StatusType = 6
	Result_ResponseType_FileError           Result_ResponseType_StatusType = 7
	Result_ResponseType_NonZeroExitStatus   Result_ResponseType_StatusType = 8
	Result_ResponseType_Signalled           Result_ResponseType_StatusType = 9
	Result_ResponseType_DangerousSyscall    Result_ResponseType_StatusType = 10
	Result_ResponseType_JudgementFailed     Result_ResponseType_StatusType = 11
	Result_ResponseType_InvalidInteraction  Result_ResponseType_StatusType = 12 // Not used
	Result_ResponseType_InternalError       Result_ResponseType_StatusType = 13
)

// Enum value maps for Result_ResponseType_StatusType.
var (
	Result_ResponseType_StatusType_name = map[int32]string{
		0:  "Invalid",
		1:  "Accepted",
		2:  "WrongAnswer",
		3:  "PartiallyCorrect",
		4:  "MemoryLimitExceeded",
		5:  "TimeLimitExceeded",
		6:  "OutputLimitExceeded",
		7:  "FileError",
		8:  "NonZeroExitStatus",
		9:  "Signalled",
		10: "DangerousSyscall",
		11: "JudgementFailed",
		12: "InvalidInteraction",
		13: "InternalError",
	}
	Result_ResponseType_StatusType_value = map[string]int32{
		"Invalid":             0,
		"Accepted":            1,
		"WrongAnswer":         2,
		"PartiallyCorrect":    3,
		"MemoryLimitExceeded": 4,
		"TimeLimitExceeded":   5,
		"OutputLimitExceeded": 6,
		"FileError":           7,
		"NonZeroExitStatus":   8,
		"Signalled":           9,
		"DangerousSyscall":    10,
		"JudgementFailed":     11,
		"InvalidInteraction":  12,
		"InternalError":       13,
	}
)

func (x Result_ResponseType_StatusType) Enum() *Result_ResponseType_StatusType {
	p := new(Result_ResponseType_StatusType)
	*p = x
	return p
}

func (x Result_ResponseType_StatusType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Result_ResponseType_StatusType) Descriptor() protoreflect.EnumDescriptor {
	return file_judge_proto_enumTypes[0].Descriptor()
}

func (Result_ResponseType_StatusType) Type() protoreflect.EnumType {
	return &file_judge_proto_enumTypes[0]
}

func (x Result_ResponseType_StatusType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Result_ResponseType_StatusType.Descriptor instead.
func (Result_ResponseType_StatusType) EnumDescriptor() ([]byte, []int) {
	return file_judge_proto_rawDescGZIP(), []int{1, 0, 0}
}

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestID   string             `protobuf:"bytes,1,opt,name=RequestID,proto3" json:"RequestID,omitempty"`
	Cmd         []*Request_CmdType `protobuf:"bytes,2,rep,name=Cmd,proto3" json:"Cmd,omitempty"`
	PipeMapping []*Request_PipeMap `protobuf:"bytes,3,rep,name=PipeMapping,proto3" json:"PipeMapping,omitempty"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_judge_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_judge_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_judge_proto_rawDescGZIP(), []int{0}
}

func (x *Request) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *Request) GetCmd() []*Request_CmdType {
	if x != nil {
		return x.Cmd
	}
	return nil
}

func (x *Request) GetPipeMapping() []*Request_PipeMap {
	if x != nil {
		return x.PipeMapping
	}
	return nil
}

type Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestID string                 `protobuf:"bytes,1,opt,name=RequestID,proto3" json:"RequestID,omitempty"`
	Response  []*Result_ResponseType `protobuf:"bytes,2,rep,name=Response,proto3" json:"Response,omitempty"`
	Error     string                 `protobuf:"bytes,3,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *Result) Reset() {
	*x = Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_judge_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_judge_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_judge_proto_rawDescGZIP(), []int{1}
}

func (x *Result) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *Result) GetResponse() []*Result_ResponseType {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *Result) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type Request_LocalFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Src string `protobuf:"bytes,1,opt,name=src,proto3" json:"src,omitempty"`
}

func (x *Request_LocalFile) Reset() {
	*x = Request_LocalFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_judge_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request_LocalFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request_LocalFile) ProtoMessage() {}

func (x *Request_LocalFile) ProtoReflect() protoreflect.Message {
	mi := &file_judge_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request_LocalFile.ProtoReflect.Descriptor instead.
func (*Request_LocalFile) Descriptor() ([]byte, []int) {
	return file_judge_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Request_LocalFile) GetSrc() string {
	if x != nil {
		return x.Src
	}
	return ""
}

type Request_MemoryFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content []byte `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *Request_MemoryFile) Reset() {
	*x = Request_MemoryFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_judge_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request_MemoryFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request_MemoryFile) ProtoMessage() {}

func (x *Request_MemoryFile) ProtoReflect() protoreflect.Message {
	mi := &file_judge_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request_MemoryFile.ProtoReflect.Descriptor instead.
func (*Request_MemoryFile) Descriptor() ([]byte, []int) {
	return file_judge_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Request_MemoryFile) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type Request_CachedFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileID string `protobuf:"bytes,1,opt,name=FileID,proto3" json:"FileID,omitempty"`
}

func (x *Request_CachedFile) Reset() {
	*x = Request_CachedFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_judge_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request_CachedFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request_CachedFile) ProtoMessage() {}

func (x *Request_CachedFile) ProtoReflect() protoreflect.Message {
	mi := &file_judge_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request_CachedFile.ProtoReflect.Descriptor instead.
func (*Request_CachedFile) Descriptor() ([]byte, []int) {
	return file_judge_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Request_CachedFile) GetFileID() string {
	if x != nil {
		return x.FileID
	}
	return ""
}

type Request_PipeCollector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Max  int64  `protobuf:"varint,2,opt,name=Max,proto3" json:"Max,omitempty"`
}

func (x *Request_PipeCollector) Reset() {
	*x = Request_PipeCollector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_judge_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request_PipeCollector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request_PipeCollector) ProtoMessage() {}

func (x *Request_PipeCollector) ProtoReflect() protoreflect.Message {
	mi := &file_judge_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request_PipeCollector.ProtoReflect.Descriptor instead.
func (*Request_PipeCollector) Descriptor() ([]byte, []int) {
	return file_judge_proto_rawDescGZIP(), []int{0, 3}
}

func (x *Request_PipeCollector) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Request_PipeCollector) GetMax() int64 {
	if x != nil {
		return x.Max
	}
	return 0
}

type Request_File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to File:
	//	*Request_File_Local
	//	*Request_File_Memory
	//	*Request_File_Cached
	//	*Request_File_Pipe
	File isRequest_File_File `protobuf_oneof:"file"`
}

func (x *Request_File) Reset() {
	*x = Request_File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_judge_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request_File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request_File) ProtoMessage() {}

func (x *Request_File) ProtoReflect() protoreflect.Message {
	mi := &file_judge_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request_File.ProtoReflect.Descriptor instead.
func (*Request_File) Descriptor() ([]byte, []int) {
	return file_judge_proto_rawDescGZIP(), []int{0, 4}
}

func (m *Request_File) GetFile() isRequest_File_File {
	if m != nil {
		return m.File
	}
	return nil
}

func (x *Request_File) GetLocal() *Request_LocalFile {
	if x, ok := x.GetFile().(*Request_File_Local); ok {
		return x.Local
	}
	return nil
}

func (x *Request_File) GetMemory() *Request_MemoryFile {
	if x, ok := x.GetFile().(*Request_File_Memory); ok {
		return x.Memory
	}
	return nil
}

func (x *Request_File) GetCached() *Request_CachedFile {
	if x, ok := x.GetFile().(*Request_File_Cached); ok {
		return x.Cached
	}
	return nil
}

func (x *Request_File) GetPipe() *Request_PipeCollector {
	if x, ok := x.GetFile().(*Request_File_Pipe); ok {
		return x.Pipe
	}
	return nil
}

type isRequest_File_File interface {
	isRequest_File_File()
}

type Request_File_Local struct {
	Local *Request_LocalFile `protobuf:"bytes,1,opt,name=local,proto3,oneof"`
}

type Request_File_Memory struct {
	Memory *Request_MemoryFile `protobuf:"bytes,2,opt,name=memory,proto3,oneof"`
}

type Request_File_Cached struct {
	Cached *Request_CachedFile `protobuf:"bytes,3,opt,name=cached,proto3,oneof"`
}

type Request_File_Pipe struct {
	Pipe *Request_PipeCollector `protobuf:"bytes,4,opt,name=pipe,proto3,oneof"`
}

func (*Request_File_Local) isRequest_File_File() {}

func (*Request_File_Memory) isRequest_File_File() {}

func (*Request_File_Cached) isRequest_File_File() {}

func (*Request_File_Pipe) isRequest_File_File() {}

type Request_CmdType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Args          []string                 `protobuf:"bytes,1,rep,name=Args,proto3" json:"Args,omitempty"`
	Env           []string                 `protobuf:"bytes,2,rep,name=Env,proto3" json:"Env,omitempty"`
	Files         []*Request_File          `protobuf:"bytes,3,rep,name=Files,proto3" json:"Files,omitempty"`
	CPULimit      uint64                   `protobuf:"varint,4,opt,name=CPULimit,proto3" json:"CPULimit,omitempty"`
	RealCPULimit  uint64                   `protobuf:"varint,5,opt,name=RealCPULimit,proto3" json:"RealCPULimit,omitempty"`
	MemoryLimit   uint64                   `protobuf:"varint,6,opt,name=MemoryLimit,proto3" json:"MemoryLimit,omitempty"`
	ProcLimit     uint64                   `protobuf:"varint,7,opt,name=ProcLimit,proto3" json:"ProcLimit,omitempty"`
	CopyIn        map[string]*Request_File `protobuf:"bytes,8,rep,name=CopyIn,proto3" json:"CopyIn,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CopyOut       []string                 `protobuf:"bytes,9,rep,name=CopyOut,proto3" json:"CopyOut,omitempty"`
	CopyOutCached []string                 `protobuf:"bytes,10,rep,name=CopyOutCached,proto3" json:"CopyOutCached,omitempty"`
	CopyOutDir    string                   `protobuf:"bytes,11,opt,name=CopyOutDir,proto3" json:"CopyOutDir,omitempty"`
}

func (x *Request_CmdType) Reset() {
	*x = Request_CmdType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_judge_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request_CmdType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request_CmdType) ProtoMessage() {}

func (x *Request_CmdType) ProtoReflect() protoreflect.Message {
	mi := &file_judge_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request_CmdType.ProtoReflect.Descriptor instead.
func (*Request_CmdType) Descriptor() ([]byte, []int) {
	return file_judge_proto_rawDescGZIP(), []int{0, 5}
}

func (x *Request_CmdType) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *Request_CmdType) GetEnv() []string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *Request_CmdType) GetFiles() []*Request_File {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *Request_CmdType) GetCPULimit() uint64 {
	if x != nil {
		return x.CPULimit
	}
	return 0
}

func (x *Request_CmdType) GetRealCPULimit() uint64 {
	if x != nil {
		return x.RealCPULimit
	}
	return 0
}

func (x *Request_CmdType) GetMemoryLimit() uint64 {
	if x != nil {
		return x.MemoryLimit
	}
	return 0
}

func (x *Request_CmdType) GetProcLimit() uint64 {
	if x != nil {
		return x.ProcLimit
	}
	return 0
}

func (x *Request_CmdType) GetCopyIn() map[string]*Request_File {
	if x != nil {
		return x.CopyIn
	}
	return nil
}

func (x *Request_CmdType) GetCopyOut() []string {
	if x != nil {
		return x.CopyOut
	}
	return nil
}

func (x *Request_CmdType) GetCopyOutCached() []string {
	if x != nil {
		return x.CopyOutCached
	}
	return nil
}

func (x *Request_CmdType) GetCopyOutDir() string {
	if x != nil {
		return x.CopyOutDir
	}
	return ""
}

type Request_PipeMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	In  *Request_PipeMap_PipeIndex `protobuf:"bytes,1,opt,name=In,proto3" json:"In,omitempty"`
	Out *Request_PipeMap_PipeIndex `protobuf:"bytes,2,opt,name=Out,proto3" json:"Out,omitempty"`
}

func (x *Request_PipeMap) Reset() {
	*x = Request_PipeMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_judge_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request_PipeMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request_PipeMap) ProtoMessage() {}

func (x *Request_PipeMap) ProtoReflect() protoreflect.Message {
	mi := &file_judge_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request_PipeMap.ProtoReflect.Descriptor instead.
func (*Request_PipeMap) Descriptor() ([]byte, []int) {
	return file_judge_proto_rawDescGZIP(), []int{0, 6}
}

func (x *Request_PipeMap) GetIn() *Request_PipeMap_PipeIndex {
	if x != nil {
		return x.In
	}
	return nil
}

func (x *Request_PipeMap) GetOut() *Request_PipeMap_PipeIndex {
	if x != nil {
		return x.Out
	}
	return nil
}

type Request_PipeMap_PipeIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index int32 `protobuf:"varint,1,opt,name=Index,proto3" json:"Index,omitempty"`
	Fd    int32 `protobuf:"varint,2,opt,name=Fd,proto3" json:"Fd,omitempty"`
}

func (x *Request_PipeMap_PipeIndex) Reset() {
	*x = Request_PipeMap_PipeIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_judge_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request_PipeMap_PipeIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request_PipeMap_PipeIndex) ProtoMessage() {}

func (x *Request_PipeMap_PipeIndex) ProtoReflect() protoreflect.Message {
	mi := &file_judge_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request_PipeMap_PipeIndex.ProtoReflect.Descriptor instead.
func (*Request_PipeMap_PipeIndex) Descriptor() ([]byte, []int) {
	return file_judge_proto_rawDescGZIP(), []int{0, 6, 0}
}

func (x *Request_PipeMap_PipeIndex) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Request_PipeMap_PipeIndex) GetFd() int32 {
	if x != nil {
		return x.Fd
	}
	return 0
}

type Result_ResponseType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     Result_ResponseType_StatusType `protobuf:"varint,1,opt,name=Status,proto3,enum=pb.Result_ResponseType_StatusType" json:"Status,omitempty"`
	ExitStatus int32                          `protobuf:"varint,2,opt,name=ExitStatus,proto3" json:"ExitStatus,omitempty"`
	Error      string                         `protobuf:"bytes,3,opt,name=Error,proto3" json:"Error,omitempty"`
	Time       uint64                         `protobuf:"varint,4,opt,name=Time,proto3" json:"Time,omitempty"`
	Memory     uint64                         `protobuf:"varint,5,opt,name=Memory,proto3" json:"Memory,omitempty"`
	Files      map[string][]byte              `protobuf:"bytes,6,rep,name=Files,proto3" json:"Files,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FileIds    map[string]string              `protobuf:"bytes,7,rep,name=FileIds,proto3" json:"FileIds,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Result_ResponseType) Reset() {
	*x = Result_ResponseType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_judge_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Result_ResponseType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result_ResponseType) ProtoMessage() {}

func (x *Result_ResponseType) ProtoReflect() protoreflect.Message {
	mi := &file_judge_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result_ResponseType.ProtoReflect.Descriptor instead.
func (*Result_ResponseType) Descriptor() ([]byte, []int) {
	return file_judge_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Result_ResponseType) GetStatus() Result_ResponseType_StatusType {
	if x != nil {
		return x.Status
	}
	return Result_ResponseType_Invalid
}

func (x *Result_ResponseType) GetExitStatus() int32 {
	if x != nil {
		return x.ExitStatus
	}
	return 0
}

func (x *Result_ResponseType) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *Result_ResponseType) GetTime() uint64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *Result_ResponseType) GetMemory() uint64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *Result_ResponseType) GetFiles() map[string][]byte {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *Result_ResponseType) GetFileIds() map[string]string {
	if x != nil {
		return x.FileIds
	}
	return nil
}

var File_judge_proto protoreflect.FileDescriptor

var file_judge_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70,
	0x62, 0x22, 0xdd, 0x08, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x25, 0x0a, 0x03, 0x43,
	0x6d, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6d, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x03, 0x43,
	0x6d, 0x64, 0x12, 0x35, 0x0a, 0x0b, 0x50, 0x69, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x52, 0x0b, 0x50, 0x69,
	0x70, 0x65, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x1a, 0x1d, 0x0a, 0x09, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x72, 0x63, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x72, 0x63, 0x1a, 0x26, 0x0a, 0x0a, 0x4d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x1a, 0x24, 0x0a, 0x0a, 0x43, 0x61, 0x63, 0x68, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x46, 0x69, 0x6c, 0x65, 0x49, 0x44, 0x1a, 0x35, 0x0a, 0x0d, 0x50, 0x69, 0x70, 0x65, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d,
	0x61, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x4d, 0x61, 0x78, 0x1a, 0xd2, 0x01,
	0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x05,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x48, 0x00, 0x52,
	0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x30, 0x0a, 0x06, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x48,
	0x00, 0x52, 0x06, 0x63, 0x61, 0x63, 0x68, 0x65, 0x64, 0x12, 0x2f, 0x0a, 0x04, 0x70, 0x69, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x48, 0x00, 0x52, 0x04, 0x70, 0x69, 0x70, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x66, 0x69,
	0x6c, 0x65, 0x1a, 0xbd, 0x03, 0x0a, 0x07, 0x43, 0x6d, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x41, 0x72, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x41, 0x72,
	0x67, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x45, 0x6e, 0x76, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x03, 0x45, 0x6e, 0x76, 0x12, 0x26, 0x0a, 0x05, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x43, 0x50, 0x55, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x43, 0x50, 0x55, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x61, 0x6c,
	0x43, 0x50, 0x55, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c,
	0x52, 0x65, 0x61, 0x6c, 0x43, 0x50, 0x55, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x50, 0x72, 0x6f, 0x63, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x63, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x37, 0x0a, 0x06,
	0x43, 0x6f, 0x70, 0x79, 0x49, 0x6e, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6d, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x2e, 0x43, 0x6f, 0x70, 0x79, 0x49, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x43,
	0x6f, 0x70, 0x79, 0x49, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x70, 0x79, 0x4f, 0x75, 0x74,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x70, 0x79, 0x4f, 0x75, 0x74, 0x12,
	0x24, 0x0a, 0x0d, 0x43, 0x6f, 0x70, 0x79, 0x4f, 0x75, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x64,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x43, 0x6f, 0x70, 0x79, 0x4f, 0x75, 0x74, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x70, 0x79, 0x4f, 0x75, 0x74,
	0x44, 0x69, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x70, 0x79, 0x4f,
	0x75, 0x74, 0x44, 0x69, 0x72, 0x1a, 0x4b, 0x0a, 0x0b, 0x43, 0x6f, 0x70, 0x79, 0x49, 0x6e, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x9c, 0x01, 0x0a, 0x07, 0x50, 0x69, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x12, 0x2d,
	0x0a, 0x02, 0x49, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x2e,
	0x50, 0x69, 0x70, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x02, 0x49, 0x6e, 0x12, 0x2f, 0x0a,
	0x03, 0x4f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x69, 0x70, 0x65, 0x4d, 0x61, 0x70, 0x2e,
	0x50, 0x69, 0x70, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x03, 0x4f, 0x75, 0x74, 0x1a, 0x31,
	0x0a, 0x09, 0x50, 0x69, 0x70, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x0e, 0x0a, 0x02, 0x46, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x46,
	0x64, 0x22, 0xb5, 0x06, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x33, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0xc1, 0x05, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x78, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x45, 0x78, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x4d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x12, 0x38, 0x0a, 0x05, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x3e,
	0x0a, 0x07, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x1a, 0x38,
	0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3a, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x65,
	0x49, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xa2, 0x02, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x10, 0x00,
	0x12, 0x0c, 0x0a, 0x08, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x10, 0x01, 0x12, 0x0f,
	0x0a, 0x0b, 0x57, 0x72, 0x6f, 0x6e, 0x67, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x10, 0x02, 0x12,
	0x14, 0x0a, 0x10, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x6c, 0x79, 0x43, 0x6f, 0x72, 0x72,
	0x65, 0x63, 0x74, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x45, 0x78, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x10, 0x04, 0x12, 0x15,
	0x0a, 0x11, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x45, 0x78, 0x63, 0x65, 0x65,
	0x64, 0x65, 0x64, 0x10, 0x05, 0x12, 0x17, 0x0a, 0x13, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x45, 0x78, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x10, 0x06, 0x12, 0x0d,
	0x0a, 0x09, 0x46, 0x69, 0x6c, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x07, 0x12, 0x15, 0x0a,
	0x11, 0x4e, 0x6f, 0x6e, 0x5a, 0x65, 0x72, 0x6f, 0x45, 0x78, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x10, 0x08, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x6c, 0x65,
	0x64, 0x10, 0x09, 0x12, 0x14, 0x0a, 0x10, 0x44, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x6f, 0x75, 0x73,
	0x53, 0x79, 0x73, 0x63, 0x61, 0x6c, 0x6c, 0x10, 0x0a, 0x12, 0x13, 0x0a, 0x0f, 0x4a, 0x75, 0x64,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x0b, 0x12, 0x16,
	0x0a, 0x12, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x10, 0x0c, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x0d, 0x32, 0x2b, 0x0a, 0x08, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x04, 0x45, 0x78, 0x65, 0x63, 0x12, 0x0b, 0x2e,
	0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0x1f, 0x5a, 0x1d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x72, 0x69, 0x79, 0x6c, 0x65, 0x2f, 0x67, 0x6f, 0x2d, 0x6a,
	0x75, 0x64, 0x67, 0x65, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_judge_proto_rawDescOnce sync.Once
	file_judge_proto_rawDescData = file_judge_proto_rawDesc
)

func file_judge_proto_rawDescGZIP() []byte {
	file_judge_proto_rawDescOnce.Do(func() {
		file_judge_proto_rawDescData = protoimpl.X.CompressGZIP(file_judge_proto_rawDescData)
	})
	return file_judge_proto_rawDescData
}

var file_judge_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_judge_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_judge_proto_goTypes = []interface{}{
	(Result_ResponseType_StatusType)(0), // 0: pb.Result.ResponseType.StatusType
	(*Request)(nil),                     // 1: pb.Request
	(*Result)(nil),                      // 2: pb.Result
	(*Request_LocalFile)(nil),           // 3: pb.Request.LocalFile
	(*Request_MemoryFile)(nil),          // 4: pb.Request.MemoryFile
	(*Request_CachedFile)(nil),          // 5: pb.Request.CachedFile
	(*Request_PipeCollector)(nil),       // 6: pb.Request.PipeCollector
	(*Request_File)(nil),                // 7: pb.Request.File
	(*Request_CmdType)(nil),             // 8: pb.Request.CmdType
	(*Request_PipeMap)(nil),             // 9: pb.Request.PipeMap
	nil,                                 // 10: pb.Request.CmdType.CopyInEntry
	(*Request_PipeMap_PipeIndex)(nil),   // 11: pb.Request.PipeMap.PipeIndex
	(*Result_ResponseType)(nil),         // 12: pb.Result.ResponseType
	nil,                                 // 13: pb.Result.ResponseType.FilesEntry
	nil,                                 // 14: pb.Result.ResponseType.FileIdsEntry
}
var file_judge_proto_depIdxs = []int32{
	8,  // 0: pb.Request.Cmd:type_name -> pb.Request.CmdType
	9,  // 1: pb.Request.PipeMapping:type_name -> pb.Request.PipeMap
	12, // 2: pb.Result.Response:type_name -> pb.Result.ResponseType
	3,  // 3: pb.Request.File.local:type_name -> pb.Request.LocalFile
	4,  // 4: pb.Request.File.memory:type_name -> pb.Request.MemoryFile
	5,  // 5: pb.Request.File.cached:type_name -> pb.Request.CachedFile
	6,  // 6: pb.Request.File.pipe:type_name -> pb.Request.PipeCollector
	7,  // 7: pb.Request.CmdType.Files:type_name -> pb.Request.File
	10, // 8: pb.Request.CmdType.CopyIn:type_name -> pb.Request.CmdType.CopyInEntry
	11, // 9: pb.Request.PipeMap.In:type_name -> pb.Request.PipeMap.PipeIndex
	11, // 10: pb.Request.PipeMap.Out:type_name -> pb.Request.PipeMap.PipeIndex
	7,  // 11: pb.Request.CmdType.CopyInEntry.value:type_name -> pb.Request.File
	0,  // 12: pb.Result.ResponseType.Status:type_name -> pb.Result.ResponseType.StatusType
	13, // 13: pb.Result.ResponseType.Files:type_name -> pb.Result.ResponseType.FilesEntry
	14, // 14: pb.Result.ResponseType.FileIds:type_name -> pb.Result.ResponseType.FileIdsEntry
	1,  // 15: pb.Executor.Exec:input_type -> pb.Request
	2,  // 16: pb.Executor.Exec:output_type -> pb.Result
	16, // [16:17] is the sub-list for method output_type
	15, // [15:16] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_judge_proto_init() }
func file_judge_proto_init() {
	if File_judge_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_judge_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_judge_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_judge_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request_LocalFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_judge_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request_MemoryFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_judge_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request_CachedFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_judge_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request_PipeCollector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_judge_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request_File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_judge_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request_CmdType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_judge_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request_PipeMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_judge_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request_PipeMap_PipeIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_judge_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Result_ResponseType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_judge_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*Request_File_Local)(nil),
		(*Request_File_Memory)(nil),
		(*Request_File_Cached)(nil),
		(*Request_File_Pipe)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_judge_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_judge_proto_goTypes,
		DependencyIndexes: file_judge_proto_depIdxs,
		EnumInfos:         file_judge_proto_enumTypes,
		MessageInfos:      file_judge_proto_msgTypes,
	}.Build()
	File_judge_proto = out.File
	file_judge_proto_rawDesc = nil
	file_judge_proto_goTypes = nil
	file_judge_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ExecutorClient is the client API for Executor service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ExecutorClient interface {
	Exec(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Result, error)
}

type executorClient struct {
	cc grpc.ClientConnInterface
}

func NewExecutorClient(cc grpc.ClientConnInterface) ExecutorClient {
	return &executorClient{cc}
}

func (c *executorClient) Exec(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/pb.Executor/Exec", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ExecutorServer is the server API for Executor service.
type ExecutorServer interface {
	Exec(context.Context, *Request) (*Result, error)
}

// UnimplementedExecutorServer can be embedded to have forward compatible implementations.
type UnimplementedExecutorServer struct {
}

func (*UnimplementedExecutorServer) Exec(context.Context, *Request) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Exec not implemented")
}

func RegisterExecutorServer(s *grpc.Server, srv ExecutorServer) {
	s.RegisterService(&_Executor_serviceDesc, srv)
}

func _Executor_Exec_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExecutorServer).Exec(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Executor/Exec",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExecutorServer).Exec(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _Executor_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Executor",
	HandlerType: (*ExecutorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Exec",
			Handler:    _Executor_Exec_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "judge.proto",
}
